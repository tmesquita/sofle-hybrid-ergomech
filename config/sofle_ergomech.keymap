/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        esc_control: esc_control {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_CONTROL";
            bindings = <&kp ESC>, <&kp LEFT_ALT>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        tap_hold: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mod_nav_left: mod_nav_left {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_NAV_LEFT";
            bindings = <&kp LA(LEFT)>, <&kp LG(LEFT)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        mod_right_nav: mod_right_nav {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_RIGHT_NAV";
            bindings = <&kp LA(RIGHT)>, <&kp LG(RIGHT)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            label = "Mac";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&trans                      &trans  &trans  &trans            &trans     &trans   &trans       &trans           &trans                  &trans    &trans         &none
&kp GRAVE                   &kp Q   &kp W   &kp E             &kp R      &kp T    &kp Y        &kp U            &kp I                   &kp O     &kp P          &kp BSPC
&tap_hold LEFT_CONTROL TAB  &kp A   &kp S   &kp D             &kp F      &kp G    &kp H        &kp J            &kp K                   &kp L     &kp SEMI       &kp SQT
&kp LSHFT                   &kp Z   &kp X   &kp C             &kp V      &kp B    &kp N        &kp M            &kp COMMA               &kp DOT   &kp FSLH       &tap_hold RIGHT_SHIFT MINUS
&kp C_MUTE                  &trans  &trans  &kp LEFT_COMMAND  &lt 1 DEL  &kp RET  &lt 1 SPACE  &lt 2 BACKSPACE  &tap_hold LEFT_ALT ESC  &trans    &trans
                                                                                  &kp ENTER    &kp END          &kp PAGE_UP             &kp HOME  &kp PAGE_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numbols {
            bindings = <
&trans  &trans      &trans       &trans        &trans                &trans                 &trans     &trans  &trans  &trans  &trans         &trans
&trans  &kp DOLLAR  &kp AT       &kp POUND     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &kp N7  &kp N8  &kp N9  &trans         &trans
&trans  &kp EXCL    &kp PERCENT  &kp AMPS      &kp EQUAL             &kp PIPE               &kp PLUS   &kp N4  &kp N5  &kp N6  &trans         &kp PIPE
&trans  &kp CARET   &trans       &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N0     &kp N1  &kp N2  &kp N3  &kp BACKSLASH  &trans
&trans  &trans      &trans       &trans        &trans                &trans                 &trans     &trans  &trans  &trans  &trans
                                                                                            &trans     &trans  &trans  &trans  &trans
            >;

            label = "Numbols";
        };

        nav_layer {
            label = "Nav";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &trans                &trans            &trans            &trans            &trans      &trans       &trans         &trans    &trans          &trans       &trans
&trans  &kp LG(N1)            &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)  &kp HOME     &mod_nav_left  &kp UP    &mod_right_nav  &none        &trans
&trans  &kp LG(LA(NUMBER_1))  &kp LG(LA(N2))    &kp LG(LA(N3))    &kp LA(LG(N4))    &trans      &kp END      &kp LEFT       &kp DOWN  &kp RIGHT       &kp K_CUT    &trans
&trans  &kp K_UNDO            &kp K_CUT         &kp K_COPY        &kp K_PASTE       &trans      &kp PAGE_UP  &kp PAGE_DOWN  &trans    &trans          &kp K_PASTE  &trans
&trans  &trans                &trans            &trans            &trans            &trans      &trans       &trans         &trans    &trans          &trans
                                                                                                &kp A        &kp B          &kp C     &kp D           &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&none            &none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none  &none
&out OUT_BLE     &none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none
&none            &none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG  &none         &none         &none         &none         &none         &none  &none  &none  &none  &none
                                                                                       &kp A  &kp B  &kp C  &kp D  &kp E
            >;
        };

        symbols {
            label = "Symbols";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &trans     &trans     &trans    &trans     &trans    &trans     &trans    &trans     &trans     &trans    &trans
&trans  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5    &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp DEL
&trans  &kp EXCL   &kp AT     &kp HASH  &kp EQUAL  &kp AT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
&trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC   &kp RBRC  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
&trans  &trans     &trans     &trans    &trans     &trans    &trans     &trans    &trans     &trans     &trans
                                                             &kp A      &kp B     &kp C      &kp D      &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
